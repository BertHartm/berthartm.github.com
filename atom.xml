<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Bert's Blog]]></title>
  <link href="http://berthartm.com/atom.xml" rel="self"/>
  <link href="http://berthartm.com/"/>
  <updated>2011-12-02T03:21:15-05:00</updated>
  <id>http://berthartm.com/</id>
  <author>
    <name><![CDATA[Bert Hartmann]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[The Web Presence Scale]]></title>
    <link href="http://berthartm.com/blog/2011/12/02/the-web-presence-scale/"/>
    <updated>2011-12-02T01:16:00-05:00</updated>
    <id>http://berthartm.com/blog/2011/12/02/the-web-presence-scale</id>
    <content type="html"><![CDATA[<p>I think a lot about how organizations exist on the internet. I&#8217;m not thinking so much about web companies, but rather the organizations that exist regardless of the internet or computers. These groups and businesses almost always exist in some form on the internet, and are often concerned with having either &#8220;more&#8221; presence or a &#8220;better&#8221; presence on the internet. I think we have an understanding of the quality of a presence, but I&#8217;ve been thinking that I don&#8217;t really have a good way of expressing quantity of web presence. I think, as a starting point, the quantity scale can be divided into certain layers.</p>

<h3>Level 0: Non-Existant</h3>

<p>The group may be real, but the internet is unaware. This can be fairly hard to achieve for organizations tied to physical locations, but for those that are more transient, is more easily possible.</p>

<h3>Level 1: Existant</h3>

<p>The group has been noticed by Google, foursquare, Yelp, etc. It doesn&#8217;t really matter how the information got out there, but now it&#8217;s out and in use. Users are able to find out information about the organization, though the org doesn&#8217;t necessarily control it.</p>

<h3>Level 2: Intentional</h3>

<p>The group has created their own space on the internet. This can take many forms, like a web page, a facebook page, or anything else that lets them collect information and organize it. It also provides them something to point other people and services to. The key distinction here is that they are now in control of their own data.</p>

<h3>Level 3: Integrated</h3>

<p>This is probably the vaguest stage, but that&#8217;s because it&#8217;s different for every organization. At this point, some level of core operation has moved to the web. Whether it&#8217;s sales, customer support / interaction, marketing, or something else.</p>

<p>Obviously, this doesn&#8217;t apply to internet based organizations, or people, who generally exist in different ways. It&#8217;s interesting to note that individuals tend to move through the levels in the order of something like 0, 3, 2, 1. Starting off with interactive accounts, then creating some place to organize their digital existance before it gets picked up by other services.</p>

<p>This also, isn&#8217;t a checklist or plan for anyone. One level isn&#8217;t necessarily better than another. Many organizations exist well at Level 1, and shouldn&#8217;t move to Level 2, as doing that poorly can be quite damaging. Also, my local pizza place doesn&#8217;t need a website.</p>

<p>I think it means something to transition between these levels. Forcing yourself into Level 1 from non-existance is a big step, as is declaring your own space on the internet, or integrating your business with it. I think it&#8217;s important at each step to figure out what this means for the organization. What statement are they making by progressing?</p>

<p>I also wonder what we can do as an industry to not require organizations to have to push to higher levels. If every organization could get by as Level 1, without having to build a custom website, without having to build custom integration, wouldn&#8217;t that be better? Does going to a higher level mean that there&#8217;s some service that they are missing at the lower ones? If we can figure that out and provide it, wouldn&#8217;t that make their lives easier?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lessons From the Postal Service]]></title>
    <link href="http://berthartm.com/blog/2011/11/22/lessons-from-the-post-office/"/>
    <updated>2011-11-22T22:36:00-05:00</updated>
    <id>http://berthartm.com/blog/2011/11/22/lessons-from-the-post-office</id>
    <content type="html"><![CDATA[<p>With the Post Office having financial troubles, they&#8217;re closing many locations. What this means for Hoboken is that we&#8217;re losing 3 out of 4 of ours.</p>

<p>What&#8217;s interesting about the closing of these offices is the process. Roughly, the process involves surveying the public, having a public hearing, and then a decision is made, and then there&#8217;s a waiting period before the office closes.</p>

<p>Having gotten 3 of these surveys, with identical explanitory letters attached, I&#8217;ve had time to ponder the inefficiencies of it. Hoboken has 4 post offices for 1.3 square miles. It&#8217;s clearly unnecessary. Several people I&#8217;ve talked to didn&#8217;t even know there was more than one, and these are people who&#8217;ve lived less than a block from one of the closing ones.</p>

<p>Reading the letter and survey, it&#8217;s clearly not designed for this sort of situation. It&#8217;s asking things like how often I visit, what I buy there, and what I use the office for, all of which could be answered by tracking at the office. It also asks if I&#8217;m able to make it to my next nearest post office should they close this one. My next nearest being half a mile away (closer than most of the ones being closed). After all this, it explains the process, how long it would be until the decision, and then that there&#8217;d be another 2 months or more until the actual closing.</p>

<p>This is all so wasteful. I realize there are good reasons for it, and that the surveys serve a good purpose especially in more rural areas, but there must be some allowance for flexability and reason.</p>

<p>My apologies to those who are truly inconvienienced by the closings because we in Hoboken are so wasteful as to have 4.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What's the point of HTML?]]></title>
    <link href="http://berthartm.com/blog/2011/11/15/whats-the-point-of-html/"/>
    <updated>2011-11-15T22:44:00-05:00</updated>
    <id>http://berthartm.com/blog/2011/11/15/whats-the-point-of-html</id>
    <content type="html"><![CDATA[<p>I&#8217;m a big fan of code separation and the <a href="http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller">MVC</a> pattern. As we slowly move towards a world where everything is a web app, I think forcing the model of MVC on most frameworks has been the greatest move towards clean code that we&#8217;ll see for a while.</p>

<p>But lets look at the View portion of MVC. What is the View for a web app? Most people would say it&#8217;s the html file that gets sent back to the browser. This is close to the truth, but clearly breaks down once you start considering javascript. A View shouldn&#8217;t be self modifying, able to handle events, etc.</p>

<p>The truth is that web apps don&#8217;t run on servers, they run in the browser. The cases are few and far between of useful web apps that don&#8217;t require javascript. Once you consider javascript, our MVC paradigm breaks.</p>

<p>The truth is, in the browser, we have our own MVC. In an ideal world, the Model is HTML, the View is CSS, and the Controller is Javascript. In practice, HTML is so ingrained into browser rendering, that it&#8217;s impossible to separate from the View. As a Model, HTML documents are rather lacking. No one wants to store anything that&#8217;s not being rendered in the HTML structure, as it&#8217;s not easy to work with.</p>

<p>Perhaps it&#8217;s time to give up on HTML being a source of clean data, and to accept it&#8217;s role as part of the view. How then do we achieve proper code separation in our web pages? How do we enable the semantic web when our fundamental form of document is rendering information and not data? The answer is to pull your data from an API. Look at Twitter; Loading up their webpage gives an HTML page with no data. Javascript on the page consumes an API, and passes it into HTML for rendering. If you&#8217;re interested in a clean form of the data itself (the Model from which the page is built), you can grab it from the API(In my case: <a href="http://api.twitter.com/1/statuses/user_timeline.json?include_entities=1&amp;include_available_features=1&amp;contributor_details=true&amp;pc=false&amp;include_rts=true&amp;user_id=243506131">http://api.twitter.com/1/statuses/user_timeline.json?include_entities=1&amp;include_available_features=1&amp;contributor_details=true&amp;pc=false&amp;include_rts=true&amp;user_id=243506131</a>).</p>

<p>Looking at HTML this way allows us to not feel guilty about non-semantic divs, and not knowing the right microformat for calendar events.</p>

<p>What we do need to make sure of is that our new html pages don&#8217;t lock up data, that there is an API for everything, and that it is publically accessible. After all, people only are scraping your HTML for information if it&#8217;s not available in a better form.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[In defense of the back button]]></title>
    <link href="http://berthartm.com/blog/2011/11/01/in-defense-of-the-back-button/"/>
    <updated>2011-11-01T20:56:00-04:00</updated>
    <id>http://berthartm.com/blog/2011/11/01/in-defense-of-the-back-button</id>
    <content type="html"><![CDATA[<p><a href="http://durietz.tumblr.com/post/12131947412/the-android-hardware-buttons-are-broken">Christoffer Du Rietz</a> recently took a jab at the Android hardware buttons. Much has been said on the topic, and I won&#8217;t try to contribute more on the subject of Android vs. iOS or whether or not hardware buttons are a good idea. Let&#8217;s just leave it at that I&#8217;m a nexus one user who likes his phone and I&#8217;m excited at what I&#8217;ve seen of Ice Cream Sandwich so far.</p>

<p>What I do want to address is a comment he made regarding the back button that &#8220;The problem is, that Android hasn’t decided what that it wants the back button to do.&#8221; . That statement seems ridiculous to me. I&#8217;ll try to explain my reasoning, but first we need to go down a little tangent.</p>

<p>Information Architecture is hard. This is not news to anyone who&#8217;s been responsible for laying out the content and navigation of a sizable website, or dealt with making sane and simple user workflows, or even struggled with finding the best outline for a paper they were writing.</p>

<p>Life used to be simpler. You struggled with your mass of information for a while, picked your favorite organizational structure and went with it, for better or worse. This is how we got the Dewey Decimal system, the standard layout for clothing stores (divided men&#8217;s / women&#8217;s / children, again in each of those sections by style of clothing, and so on). Of course, everything can only be in one place though, so your book that&#8217;s a mix of Computer Science and Literature? Someone&#8217;s going to have make a choice as to which section of the library it will be in.</p>

<p>Computers solved that problem, right? Now ebooks can exist in both classifications, since they&#8217;re digital. Being able to link around the web means we don&#8217;t have to follow anyone else&#8217;s established hierarchy. I mean, books still have to be on a certain shelf and a shirt on a particular rack, but we can search and shop unlike and find what we&#8217;re looking for.</p>

<p>Unfortunately, this is only partly true. We still have two forms of going through content as humans, searching and browsing. Linking and searching work for the searching behavior, but for browsing we still need to have a hierarchy and feel like we know where we are (even when &#8220;where we are&#8221; exists only as bits on the screen). You&#8217;ll notice all the clothing store websites haven&#8217;t abandoned their hierarchies. People still like to be able to go &#8220;up&#8221; from what they&#8217;re looking at to all Men&#8217;s clothing, or &#8220;down&#8221; to a particular shirt, or &#8220;over&#8221; to look at pants instead. What has changed though, is that we now have somethings that can function without hierarchy at all.</p>

<p>Twitter has no strict information hierarchy. It&#8217;s not unique in this, but it&#8217;s who I&#8217;m going to pick on right now. If we were to assign Twitter a hierarchy, it would probably be a very flat and wide one where the user would pick one of a million users, and they would have their tweets and their profile. Not great usability. Twitter works because they can break this model, throw it out the window, and have navigation based on aggregation of a hundred different things. This means there is no &#8220;up&#8221; or &#8220;down&#8221; in Twitter. There&#8217;s only &#8220;back&#8221; (and then sometimes &#8220;forward&#8221;), which are new directions based on the <em>user&#8217;s flow</em> instead of the information architecture.</p>

<p>This is what your browser does to allow you some affordance of navigation through the web. Each site (usually) has their hierarchy, but once you break that, it&#8217;s back to the browser back button.</p>

<p><strong>So now let&#8217;s get back to the point.</strong></p>

<p>Android, tasked with building an OS for a smartphone, has to figure out navigation among many other issues. Apps are much worse than websites when it comes to navigation. Between the myriad of chat programs, things like dropbox, tuners, and other utilities, and other programs on my phone, I&#8217;d be hard pressed to figure out a sane hierarchical navigation for half of them. To add to this, Android has a wonderful way to call into different parts of applications using intents, which act as the equivalent of linking to different webpages online.</p>

<p>So, we&#8217;re in a model where there&#8217;s no guaranteed hierarchy within apps, and a user is able and probable to wander through applications anyway. This means we have to throw out the browsing model (at least from an os perspective, inside apps it may still work) and stick with our navigational concession, the back button.</p>

<p>If understood this way, the back button is entirely consistent. Even in cases where hierarchical navigation still makes sense, I think you&#8217;ll find that most of them are similar to something like a mail program. Click one email to view, and then people tend to choose &#8220;back&#8221; over &#8220;up&#8221;. How often do you hit the inbox link in gmail?</p>

<p>At this point I feel compelled to call out Facebook on their recent app design, which is the only one I know that willfully breaks this model. Android allows you to override the back button behavior, but recommends against it for consistency reasons (and, hey, why write the code when the os gives it for free?). Facebook launches a user into the newsfeed when they open the app, and hitting the back button takes them to some sort of menu. Back again behaves as expected. I&#8217;m not sure what the thought process was here towards breaking the expecation. Unfortunately, there&#8217;s discussions as to how to treat the back button in ajax applications as there&#8217;s no browser reload between actions for them, so I imagine as that we&#8217;ll see more abuses of this type as the tools evolve to change browser behavior.</p>

<p>Thanks to <a href="http://twitter.com/okayrene">@okayrene</a> for helping me refine this.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Making a useful business]]></title>
    <link href="http://berthartm.com/blog/2011/10/25/making-a-useful-business/"/>
    <updated>2011-10-25T21:34:00-04:00</updated>
    <id>http://berthartm.com/blog/2011/10/25/making-a-useful-business</id>
    <content type="html"><![CDATA[<p>I saw a post on Hacker News recently about a recent batch of graduates from TechStars. There was a comment there lamenting the lack of businesses attacking new problems. Unfortunately, I can&#8217;t find the post or comment now, unfortunately, but it&#8217;s a thought I&#8217;ve heard and shared before, and it&#8217;s not unique to any program or group of people.</p>

<p>A lot is said in the startup world about &#8220;scratching your own itch&#8221;. That is, find a problem that affects you so you&#8217;ll be inspired to solve it. A lot of great ideas and businesses have come out of this, but it&#8217;s almost come to a point where people don&#8217;t know what to solve because a lot of the problems in the life of a typical startup founder have been solved.</p>

<p>A comparison to our lives 10 years ago shows that. We now have much better internet access, more blogging, email sending, hosting, and social media solutions than you can shake a fist at. We even have smartphones so we never need to be without a computer. I&#8217;m not arguing that there aren&#8217;t improvements to be made in these fields, but rather that a lot of them have been attacked and are 85% solved. Yes, you may be able to do better and make it 90%, but it&#8217;s going to be a hard sell.</p>

<p>When I expand my itch scratching to family and friends, I find problems that are screaming for good teams of people to provide any help at all. If you look at any small (or even large) business, you&#8217;ll find tons of processes that are annoyingly manual, time consuming, and generally wasteful.</p>

<p>When we started <a href='http://MomnPo.ps'>Mom n Pops</a>, we were scratching our own itch. We found it hard to find things in our neighborhood. What we found was that not only was the consumer side lacking, but that there were no tools on the store side either. Store owners keeping track of things on post-it notes, distributors going store to store taking inventory by hand on paper, and what tools exist are expensive and bad. Theres definitely work to be done here.</p>

<p>My new rule of thumb when I hear ideas is &#8220;Who&#8217;s life is significantly better because of this?&#8221; and, if I&#8217;m uninspired with ideas for what I should do, I talk to other people about their jobs. They always know something that can be fixed.</p>
]]></content>
  </entry>
  
</feed>
